var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = UnionWrappers","category":"page"},{"location":"#UnionWrappers","page":"Home","title":"UnionWrappers","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for UnionWrappers.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [UnionWrappers]","category":"page"},{"location":"#UnionWrappers.AbstractEltypeWrapper","page":"Home","title":"UnionWrappers.AbstractEltypeWrapper","text":"AbstractEltypeWrapper{E,T} <: AbstractUnionWrapper{T}\n\nWrapper that stores an additional element type as a type parameter. The element type can be queried using eltype(w). For instance, see ComponentArrayWrapper.\n\n\n\n\n\n","category":"type"},{"location":"#UnionWrappers.AbstractLengthWrapper","page":"Home","title":"UnionWrappers.AbstractLengthWrapper","text":"AbstractLengthWrapper{N,E,T} <: AbstractEltypeWrapper{E,T}\n\nWrapper that stores an additional number of elements as a type parameter. The number of elements can be queried using length(w). For instance, see NTupleWrapper.\n\n\n\n\n\n","category":"type"},{"location":"#UnionWrappers.AbstractUnionWrapper","page":"Home","title":"UnionWrappers.AbstractUnionWrapper","text":"AbstractUnionWrapper{T}\n\nBasic Wrapper that stores a single type parameter to distinguish different wrapped types for dispatch. For instance, see AnyWrapper.\n\n\n\n\n\n","category":"type"},{"location":"#UnionWrappers.AnyWrapper","page":"Home","title":"UnionWrappers.AnyWrapper","text":"AnyWrapper = UnionWrapper{Val(:Any)}\n\nAlias for the UnionWrapper that is created by wrap without a more specific method.  \n\n\n\n\n\n","category":"type"},{"location":"#UnionWrappers.ComponentArrayWrapper","page":"Home","title":"UnionWrappers.ComponentArrayWrapper","text":"ComponentArrayWrapper{E} = EltypeWrapper{E,Val(:ComponentArray)}\n\nAlias for the EltypeWrapper that is created by wrap on a ComponentArray. For a ComponentVector the more specific type ComponentVectorWrapper{N,E} is created.  \n\n\n\n\n\n","category":"type"},{"location":"#UnionWrappers.ComponentVectorWrapper","page":"Home","title":"UnionWrappers.ComponentVectorWrapper","text":"ComponentVectorWrapper{N,E} = LengthWrapper{N,E,Val(:ComponentVector)}\n\nAlias for the LengthWrapper that is created by wrap for a ComponentVector.  \n\n\n\n\n\n","category":"type"},{"location":"#UnionWrappers.NTupleWrapper","page":"Home","title":"UnionWrappers.NTupleWrapper","text":"NTupleWrapper{N,E} = LengthWrapper{N,E,Val(:NTuple)}\n\nAlias for the LengthWrapper that is created by wrap for an NTuple.  \n\n\n\n\n\n","category":"type"},{"location":"#UnionWrappers.NamedTupleWrapper","page":"Home","title":"UnionWrappers.NamedTupleWrapper","text":"NamedTupleWrapper{N,E} = LengthWrapper{N,E,Val(:NamedTuple)}\n\nAlias for the LengthWrapper that is created by wrap for a  NamedTuple{K,NTuple{N,E}}.  \n\n\n\n\n\n","category":"type"},{"location":"#UnionWrappers.unwrap-Tuple{UnionWrapper}","page":"Home","title":"UnionWrappers.unwrap","text":"wrap(x)\n\nWraps into a AbstractUnionWrapper type to avoid compilation for types with much information in type parameters.\n\nSpecific methods create different Wrappers with a small amount of  information on the type and its properties preserved in type parameters.\n\nThe default produces as UnionWrapper{Val{:Any}()}.\n\nSee unwrap(w) and wrapped_type(w) to extract the original value or its type.\n\n\n\n\n\n","category":"method"},{"location":"#UnionWrappers.wrap","page":"Home","title":"UnionWrappers.wrap","text":"wrap(x)\n\nWraps into a AbstractUnionWrapper type to avoid compilation for types with much information in type parameters.\n\nSpecific methods create different Wrappers with a small amount of  information on the type and its properties preserved in type parameters.\n\nThe default produces as UnionWrapper{Val{:Any}()}.\n\nSee unwrap(w) and wrapped_type(w) to extract the original value or its type.\n\n\n\n\n\n","category":"function"},{"location":"#UnionWrappers.wrapped_type-Union{Tuple{AbstractUnionWrapper{T}}, Tuple{T}} where T","page":"Home","title":"UnionWrappers.wrapped_type","text":"wrap(x)\n\nWraps into a AbstractUnionWrapper type to avoid compilation for types with much information in type parameters.\n\nSpecific methods create different Wrappers with a small amount of  information on the type and its properties preserved in type parameters.\n\nThe default produces as UnionWrapper{Val{:Any}()}.\n\nSee unwrap(w) and wrapped_type(w) to extract the original value or its type.\n\n\n\n\n\n","category":"method"}]
}
